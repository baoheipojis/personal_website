import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,e as n,o as e}from"./app-D7KlGvaD.js";const t={};function l(h,i){return e(),a("div",null,i[0]||(i[0]=[n(`<h1 id="智能合约交互" tabindex="-1"><a class="header-anchor" href="#智能合约交互"><span>智能合约交互</span></a></h1><p>对于高频/套利交易而言，很显然我们应当使用电脑程序而不是人类进行操作。接下来，我们就介绍使用Python与op区块链进行交互的方式。</p><h2 id="基础操作" tabindex="-1"><a class="header-anchor" href="#基础操作"><span>基础操作</span></a></h2><p>我们使用web3.py库与op区块链进行交互。首先，我们需要安装web3.py库：</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">pip</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> install</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> web3</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="查询余额" tabindex="-1"><a class="header-anchor" href="#查询余额"><span>查询余额</span></a></h3><p>我们可以使用web3.py库查询op区块链上某个地址的余额。以下是一个示例代码：</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> web3 </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> Web3</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">from</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> dotenv </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> load_dotenv</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> os</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 加载 .env 文件</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">load_dotenv</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 连接 Optimism 主网（可替换为 Alchemy 或 Infura 提供的 RPC）</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">OP_RPC_URL</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;https://mainnet.optimism.io&quot;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">w3 </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;"> Web3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(Web3.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">HTTPProvider</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-dark:#D19A66;">OP_RPC_URL</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">))</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">print</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(w3.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">is_connected</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">())  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># True 代表连接成功</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 从环境变量中获取地址</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">address </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> os.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">getenv</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;ADDRESS&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">balance </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> w3.eth.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">get_balance</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(address)</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">print</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(w3.</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;">from_wei</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(balance, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;ether&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">))  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 转换为 ETH</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,8)]))}const r=s(t,[["render",l]]),d=JSON.parse('{"path":"/posts/%E6%8A%95%E8%B5%84/%E5%8C%BA%E5%9D%97%E9%93%BE%E4%B8%8E%E5%8A%A0%E5%AF%86%E8%B4%A7%E5%B8%81/%E9%87%8F%E5%8C%96%E4%BA%A4%E6%98%93/%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6%E4%BA%A4%E4%BA%92.html","title":"智能合约交互","lang":"zh-CN","frontmatter":{"description":"智能合约交互 对于高频/套利交易而言，很显然我们应当使用电脑程序而不是人类进行操作。接下来，我们就介绍使用Python与op区块链进行交互的方式。 基础操作 我们使用web3.py库与op区块链进行交互。首先，我们需要安装web3.py库： 查询余额 我们可以使用web3.py库查询op区块链上某个地址的余额。以下是一个示例代码：","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"智能合约交互\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-05-07T03:49:19.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Pojis\\"}]}"],["meta",{"property":"og:url","content":"https://mister-hope.github.io/posts/%E6%8A%95%E8%B5%84/%E5%8C%BA%E5%9D%97%E9%93%BE%E4%B8%8E%E5%8A%A0%E5%AF%86%E8%B4%A7%E5%B8%81/%E9%87%8F%E5%8C%96%E4%BA%A4%E6%98%93/%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6%E4%BA%A4%E4%BA%92.html"}],["meta",{"property":"og:site_name","content":"博客演示"}],["meta",{"property":"og:title","content":"智能合约交互"}],["meta",{"property":"og:description","content":"智能合约交互 对于高频/套利交易而言，很显然我们应当使用电脑程序而不是人类进行操作。接下来，我们就介绍使用Python与op区块链进行交互的方式。 基础操作 我们使用web3.py库与op区块链进行交互。首先，我们需要安装web3.py库： 查询余额 我们可以使用web3.py库查询op区块链上某个地址的余额。以下是一个示例代码："}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-05-07T03:49:19.000Z"}],["meta",{"property":"article:modified_time","content":"2025-05-07T03:49:19.000Z"}]]},"git":{"createdTime":1746589759000,"updatedTime":1746589759000,"contributors":[{"name":"Pojis","username":"Pojis","email":"221220001@smail.nju.edu.cn","commits":1,"url":"https://github.com/Pojis"}]},"readingTime":{"minutes":0.68,"words":203},"filePathRelative":"posts/投资/区块链与加密货币/量化交易/智能合约交互.md","excerpt":"\\n<p>对于高频/套利交易而言，很显然我们应当使用电脑程序而不是人类进行操作。接下来，我们就介绍使用Python与op区块链进行交互的方式。</p>\\n<h2>基础操作</h2>\\n<p>我们使用web3.py库与op区块链进行交互。首先，我们需要安装web3.py库：</p>\\n<div class=\\"language-bash line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"bash\\" style=\\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\\"><pre class=\\"shiki shiki-themes one-light one-dark-pro vp-code\\"><code><span class=\\"line\\"><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">pip</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> install</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> web3</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{r as comp,d as data};
